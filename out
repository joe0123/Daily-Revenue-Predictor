nohup: 忽略輸入
(91531, 625)
(91531, 625)
{('adr', 'feature_selection__estimator__alpha'): [1, 0.1, 0.01], ('adr', 'regression__alpha'): [1, 0.1, 0.01, 0.001], ('cancel', 'feature_selection__estimator__C'): [1, 10.0, 100.0], ('cancel', 'classification__C'): [1, 10.0, 100.0, 0.001]}

851.92 sec -- {'mean_score': 0.6577, 'valid_scores': [0.6535947712418301, 0.738562091503268, 1.0196078431372548, 0.6158940397350994, 0.4666666666666667, 0.45161290322580644], 'train_scores': [0.28524590163934427, 0.32786885245901637, 0.352803738317757, 0.3394683026584867, 0.36363636363636365, 0.3448275862068966], 'params': {('cancel', 'feature_selection__estimator__C'): 100.0, ('cancel', 'classification__C'): 10.0, ('adr', 'regression__alpha'): 0.001, ('adr', 'feature_selection__estimator__alpha'): 0.1}}

900.68 sec -- {'mean_score': 0.7329, 'valid_scores': [0.7843137254901961, 0.869281045751634, 0.7908496732026143, 0.6556291390728477, 0.5555555555555556, 0.7419354838709677], 'train_scores': [0.42950819672131146, 0.5273224043715847, 0.514018691588785, 0.5357873210633947, 0.5127272727272727, 0.4942528735632184], 'params': {('cancel', 'feature_selection__estimator__C'): 10.0, ('cancel', 'classification__C'): 100.0, ('adr', 'regression__alpha'): 1, ('adr', 'feature_selection__estimator__alpha'): 1}}
Traceback (most recent call last):
  File "/nfs/undergrad/06/b06902125/Senior1/final/lin_comb_.py", line 57, in <module>
    print("\nmean_score:", print_format(sort_key=lambda item: item["mean_score"]))
  File "/nfs/undergrad/06/b06902125/Senior1/final/lin_comb_.py", line 56, in <lambda>
    print_format = lambda sort_key: json.dumps(sorted(results, key=sort_key, reverse=True), indent=4) 
  File "/usr/lib/python3.9/json/__init__.py", line 234, in dumps
    return cls(
  File "/usr/lib/python3.9/json/encoder.py", line 201, in encode
    chunks = list(chunks)
  File "/usr/lib/python3.9/json/encoder.py", line 429, in _iterencode
    yield from _iterencode_list(o, _current_indent_level)
  File "/usr/lib/python3.9/json/encoder.py", line 325, in _iterencode_list
    yield from chunks
  File "/usr/lib/python3.9/json/encoder.py", line 405, in _iterencode_dict
    yield from chunks
  File "/usr/lib/python3.9/json/encoder.py", line 376, in _iterencode_dict
    raise TypeError(f'keys must be str, int, float, bool or None, '
TypeError: keys must be str, int, float, bool or None, not tuple
